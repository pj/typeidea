exports["simple_service(0)"] = "/**\n * **GENERATED CODE DO NOT EDIT!**\n */\n/*\n * TestInputType\n * An awesome input type\n * Change Log:\n * 1. Needs this for testing new type\n * 2. Need this for testing add field input\n */\n/*\n * TestOutputType\n * An awesome output type\n * Change Log:\n * 1. Needs this for testing new output type\n * 2. Need this field for testing new output type\n */\n\n/**\n * @param a_field An awesome field on the input type\n *\n * @sealed\n *\n */\nexport class TestInputType_H716a611faeb9d2ddaa02e37a5d187183ff4d388f47c740bb2202109b3e3c8fc0 {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly a_field: string;\n\n  constructor(version: number, hash: string, a_field: string) {\n    this.version = version;\n    this.hash = hash;\n\n    this.a_field = a_field;\n  }\n}\n\nexport type TestInputType_V0 = TestInputType_H716a611faeb9d2ddaa02e37a5d187183ff4d388f47c740bb2202109b3e3c8fc0;\n\nexport class TestInputType {\n  static deserialize(message: any): TestInputType_V0 {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    switch (message.version) {\n      case \"TestInputType_V0\":\n      case \"TestInputType_H716a611faeb9d2ddaa02e37a5d187183ff4d388f47c740bb2202109b3e3c8fc0\":\n        return new TestInputType_H716a611faeb9d2ddaa02e37a5d187183ff4d388f47c740bb2202109b3e3c8fc0(\n          0,\n          \"716a611faeb9d2ddaa02e37a5d187183ff4d388f47c740bb2202109b3e3c8fc0\",\n          message.a_field\n        );\n\n      default:\n        throw new Error(\n          `Unknown version error or version not present: ${message}`\n        );\n    }\n  }\n\n  static serialize(message: TestInputType_V0): string {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    return JSON.stringify(message);\n  }\n}\n\n/**\n * @param a_field An awesome field on the output type\n *\n * @sealed\n *\n */\nexport class TestOutputType_Hc503f8a6a87dcd268e82e6cffa2e58db72866839a676faa2df84f470f889ae80 {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly a_field: string;\n\n  constructor(version: number, hash: string, a_field: string) {\n    this.version = version;\n    this.hash = hash;\n\n    this.a_field = a_field;\n  }\n}\n\nexport type TestOutputType_V0 = TestOutputType_Hc503f8a6a87dcd268e82e6cffa2e58db72866839a676faa2df84f470f889ae80;\n\nexport class TestOutputType {\n  static deserialize(message: any): TestOutputType_V0 {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    switch (message.version) {\n      case \"TestOutputType_V0\":\n      case \"TestOutputType_Hc503f8a6a87dcd268e82e6cffa2e58db72866839a676faa2df84f470f889ae80\":\n        return new TestOutputType_Hc503f8a6a87dcd268e82e6cffa2e58db72866839a676faa2df84f470f889ae80(\n          0,\n          \"c503f8a6a87dcd268e82e6cffa2e58db72866839a676faa2df84f470f889ae80\",\n          message.a_field\n        );\n\n      default:\n        throw new Error(\n          `Unknown version error or version not present: ${message}`\n        );\n    }\n  }\n\n  static serialize(message: TestOutputType_V0): string {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    return JSON.stringify(message);\n  }\n}\n";

exports["simple_service(1)"] = "/**\n * **GENERATED CODE DO NOT EDIT!**\n */\nimport { Request, Response } from \"express\";\n/*\n * AwesomeService\n *\n * An awesome service\n *\n * # Change Log:\n * 1. Services are good\n */\nimport { TestInputType, TestOutputType, TestInputType_V0 } from \"./types\";\nimport { TestOutputType_V0 } from \"./types\";\n\nexport default function AwesomeService(\n  app: any,\n  func: (input: TestInputType_V0) => TestOutputType_V0\n): void {\n  app.get(\"/AwesomeService\", (req: Request, res: Response) => {\n    const inputMessage = TestInputType.deserialize(req.body);\n    const response = func(inputMessage);\n    const outputMessage = TestOutputType.serialize(response);\n    res.json(outputMessage);\n  });\n}\n";

