exports["Multiple types with type reference(0)"] = "/**\n * **GENERATED CODE DO NOT EDIT!**\n */\n/*\n * Test\n * A useful type\n * Change Log:\n * 1. Creating a new type\n * 2. Adding a field\n */\n/*\n * Test2\n * a useful type\n * Change Log:\n * 1. Creating a new type\n * 2. asdf\n */\n\n// import * as Test from './Test';\n\n/**\n * @param test_field A field that helps testing\n *\n * @sealed\n *\n */\nexport class Test_Hc68b1dfae49d22c7332dcfcb86145926907e4171e3a7bb1f3861e9e3b0c2bdfb {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string | null;\n\n  constructor(version: number, hash: string, test_field: string | null) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field;\n  }\n}\n\nexport type Test_V0 = Test_Hc68b1dfae49d22c7332dcfcb86145926907e4171e3a7bb1f3861e9e3b0c2bdfb;\n\nexport class Test {\n  static deserialize(message: any): Test_V0 {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    switch (message.version) {\n      case \"Test_V0\":\n      case \"Test_Hc68b1dfae49d22c7332dcfcb86145926907e4171e3a7bb1f3861e9e3b0c2bdfb\":\n        return new Test_Hc68b1dfae49d22c7332dcfcb86145926907e4171e3a7bb1f3861e9e3b0c2bdfb(\n          0,\n          \"c68b1dfae49d22c7332dcfcb86145926907e4171e3a7bb1f3861e9e3b0c2bdfb\",\n          message.test_field\n        );\n\n      default:\n        throw new Error(\n          `Unknown version error or version not present: ${message}`\n        );\n    }\n  }\n\n  static serialize(message: Test_V0): string {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    return JSON.stringify(message);\n  }\n}\n\n/**\n * @param test_field2 A reference\n *\n * @sealed\n *\n */\nexport class Test2_He396d1be414c1504f56969feff04b4bcdf1c52ca1cb653c75f959a3a24d37c49 {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field2: Test.h_c68b1dfae49d22c7332dcfcb86145926907e4171e3a7bb1f3861e9e3b0c2bdfb;\n\n  constructor(\n    version: number,\n    hash: string,\n    test_field2: Test.h_c68b1dfae49d22c7332dcfcb86145926907e4171e3a7bb1f3861e9e3b0c2bdfb\n  ) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field2 = test_field2;\n  }\n}\n\nexport type Test2_V0 = Test2_He396d1be414c1504f56969feff04b4bcdf1c52ca1cb653c75f959a3a24d37c49;\n\nexport class Test2 {\n  static deserialize(message: any): Test2_V0 {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    switch (message.version) {\n      case \"Test2_V0\":\n      case \"Test2_He396d1be414c1504f56969feff04b4bcdf1c52ca1cb653c75f959a3a24d37c49\":\n        return new Test2_He396d1be414c1504f56969feff04b4bcdf1c52ca1cb653c75f959a3a24d37c49(\n          0,\n          \"e396d1be414c1504f56969feff04b4bcdf1c52ca1cb653c75f959a3a24d37c49\",\n          message.test_field2\n        );\n\n      default:\n        throw new Error(\n          `Unknown version error or version not present: ${message}`\n        );\n    }\n  }\n\n  static serialize(message: Test2_V0): string {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    return JSON.stringify(message);\n  }\n}\n";

exports["Add a field(0)"] = "/**\n * **GENERATED CODE DO NOT EDIT!**\n */\n/*\n * Test\n * Test\n * Change Log:\n * 1. Creating a new type\n * 2. Adding a field\n */\n\n/**\n * @param test_field A field that helps testing\n *\n * @sealed\n *\n */\nexport class Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string | null;\n\n  constructor(version: number, hash: string, test_field: string | null) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field;\n  }\n}\n\nexport type Test_V0 = Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d;\n\nexport class Test {\n  static deserialize(message: any): Test_V0 {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    switch (message.version) {\n      case \"Test_V0\":\n      case \"Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\":\n        return new Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d(\n          0,\n          \"56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\",\n          message.test_field\n        );\n\n      default:\n        throw new Error(\n          `Unknown version error or version not present: ${message}`\n        );\n    }\n  }\n\n  static serialize(message: Test_V0): string {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    return JSON.stringify(message);\n  }\n}\n";

exports["Add a field with a default value(0)"] = "/**\n * **GENERATED CODE DO NOT EDIT!**\n */\n/*\n * Test\n * Test\n * Change Log:\n * 1. Creating a new type\n * 2. Adding a field\n */\n\n/**\n * @param test_field A field that helps testing\n *\n * @sealed\n *\n */\nexport class Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string | null;\n\n  constructor(version: number, hash: string, test_field: string | null) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field || \"A value\";\n  }\n}\n\nexport type Test_V0 = Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c;\n\nexport class Test {\n  static deserialize(message: any): Test_V0 {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    switch (message.version) {\n      case \"Test_V0\":\n      case \"Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c\":\n        return new Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c(\n          0,\n          \"036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c\",\n          message.test_field\n        );\n\n      default:\n        throw new Error(\n          `Unknown version error or version not present: ${message}`\n        );\n    }\n  }\n\n  static serialize(message: Test_V0): string {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    return JSON.stringify(message);\n  }\n}\n";

exports["Rename a field(0)"] = "/**\n * **GENERATED CODE DO NOT EDIT!**\n */\n/*\n * Test\n * Test\n * Change Log:\n * 1. Creating a new type\n * 2. Adding a field\n * 3. Renaming a field\n */\n\n/**\n * @param test_field A field that helps testing\n *\n * @sealed\n *\n */\nexport class Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string | null;\n\n  constructor(version: number, hash: string, test_field: string | null) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field || \"A value\";\n  }\n}\n\nexport type Test_V0 = Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c;\n\n/**\n * @param renamed_field A field that helps testing\n *\n * @sealed\n *\n */\nexport class Test_He41f7b607671faf485204483dcf344ef15bbd2856a51485d9876e73178fe07bf {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly renamed_field: string | null;\n\n  constructor(version: number, hash: string, renamed_field: string | null) {\n    this.version = version;\n    this.hash = hash;\n\n    this.renamed_field = renamed_field || \"A value\";\n  }\n}\n\nexport type Test_V1 = Test_He41f7b607671faf485204483dcf344ef15bbd2856a51485d9876e73178fe07bf;\n\nexport class Test {\n  static deserialize(message: any): Test_V0 | Test_V1 {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    switch (message.version) {\n      case \"Test_V0\":\n      case \"Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c\":\n        return new Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c(\n          0,\n          \"036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c\",\n          message.test_field\n        );\n\n      case \"Test_V1\":\n      case \"Test_He41f7b607671faf485204483dcf344ef15bbd2856a51485d9876e73178fe07bf\":\n        return new Test_He41f7b607671faf485204483dcf344ef15bbd2856a51485d9876e73178fe07bf(\n          1,\n          \"e41f7b607671faf485204483dcf344ef15bbd2856a51485d9876e73178fe07bf\",\n          message.renamed_field\n        );\n\n      default:\n        throw new Error(\n          `Unknown version error or version not present: ${message}`\n        );\n    }\n  }\n\n  static serialize(message: Test_V0 | Test_V1): string {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    return JSON.stringify(message);\n  }\n}\n";

exports["Make a field optional(0)"] = "/**\n * **GENERATED CODE DO NOT EDIT!**\n */\n/*\n * Test\n * Test\n * Change Log:\n * 1. Creating a new type\n * 2. Adding a field\n * 3. Oops needed to make it optional\n */\n\n/**\n * @param test_field A field that helps testing\n *\n * @sealed\n *\n */\nexport class Test_H3b9ac56de579e9a69937f2d1d2c27a4cfbedfd0710682f8ab629b18aac4efe14 {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string;\n\n  constructor(version: number, hash: string, test_field: string) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field;\n  }\n}\n\nexport type Test_V0 = Test_H3b9ac56de579e9a69937f2d1d2c27a4cfbedfd0710682f8ab629b18aac4efe14;\n\n/**\n * @param test_field A field that helps testing\n *\n * @sealed\n *\n */\nexport class Test_H818de92c4372ef16f0eba77a342f97cd788f18b24d52b54a2870236d82184a0b {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string | null;\n\n  constructor(version: number, hash: string, test_field: string | null) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field;\n  }\n}\n\nexport type Test_V1 = Test_H818de92c4372ef16f0eba77a342f97cd788f18b24d52b54a2870236d82184a0b;\n\nexport class Test {\n  static deserialize(message: any): Test_V0 | Test_V1 {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    switch (message.version) {\n      case \"Test_V0\":\n      case \"Test_H3b9ac56de579e9a69937f2d1d2c27a4cfbedfd0710682f8ab629b18aac4efe14\":\n        return new Test_H3b9ac56de579e9a69937f2d1d2c27a4cfbedfd0710682f8ab629b18aac4efe14(\n          0,\n          \"3b9ac56de579e9a69937f2d1d2c27a4cfbedfd0710682f8ab629b18aac4efe14\",\n          message.test_field\n        );\n\n      case \"Test_V1\":\n      case \"Test_H818de92c4372ef16f0eba77a342f97cd788f18b24d52b54a2870236d82184a0b\":\n        return new Test_H818de92c4372ef16f0eba77a342f97cd788f18b24d52b54a2870236d82184a0b(\n          1,\n          \"818de92c4372ef16f0eba77a342f97cd788f18b24d52b54a2870236d82184a0b\",\n          message.test_field\n        );\n\n      default:\n        throw new Error(\n          `Unknown version error or version not present: ${message}`\n        );\n    }\n  }\n\n  static serialize(message: Test_V0 | Test_V1): string {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    return JSON.stringify(message);\n  }\n}\n";

exports["Delete a field(0)"] = "/**\n * **GENERATED CODE DO NOT EDIT!**\n */\n/*\n * Test\n * Test\n * Change Log:\n * 1. Creating a new type\n * 2. Adding a field\n * 3. Adding another field\n * 4. didn&#39;t actually need that\n */\n\n/**\n * @param test_field A field that helps testing\n *\n * @sealed\n *\n */\nexport class Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string | null;\n\n  constructor(version: number, hash: string, test_field: string | null) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field;\n  }\n}\n\nexport type Test_V0 = Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d;\n\n/**\n * @param test_field A field that helps testing\n * @param test_field2 A field that helps testing, again\n *\n * @sealed\n *\n */\nexport class Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0 {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string | null;\n\n  readonly test_field2: string;\n\n  constructor(\n    version: number,\n    hash: string,\n    test_field: string | null,\n    test_field2: string\n  ) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field;\n\n    this.test_field2 = test_field2 || \"blah\";\n  }\n}\n\nexport type Test_V1 = Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0;\n\n/**\n * @param test_field A field that helps testing\n *\n * @sealed\n *\n */\nexport class Test_Hd6cc2965f8ee5ebb6de4a255956c869a8c212bcc4d0bccf1dff40a440c2343f7 {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string | null;\n\n  constructor(version: number, hash: string, test_field: string | null) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field;\n  }\n}\n\nexport type Test_V2 = Test_Hd6cc2965f8ee5ebb6de4a255956c869a8c212bcc4d0bccf1dff40a440c2343f7;\n\nexport class Test {\n  static deserialize(message: any): Test_V0 | Test_V1 | Test_V2 {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    switch (message.version) {\n      case \"Test_V0\":\n      case \"Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\":\n        return new Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d(\n          0,\n          \"56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\",\n          message.test_field\n        );\n\n      case \"Test_V1\":\n      case \"Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0\":\n        return new Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0(\n          1,\n          \"4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0\",\n          message.test_field,\n          message.test_field2\n        );\n\n      case \"Test_V2\":\n      case \"Test_Hd6cc2965f8ee5ebb6de4a255956c869a8c212bcc4d0bccf1dff40a440c2343f7\":\n        return new Test_Hd6cc2965f8ee5ebb6de4a255956c869a8c212bcc4d0bccf1dff40a440c2343f7(\n          2,\n          \"d6cc2965f8ee5ebb6de4a255956c869a8c212bcc4d0bccf1dff40a440c2343f7\",\n          message.test_field\n        );\n\n      default:\n        throw new Error(\n          `Unknown version error or version not present: ${message}`\n        );\n    }\n  }\n\n  static serialize(message: Test_V0 | Test_V1 | Test_V2): string {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    return JSON.stringify(message);\n  }\n}\n";

exports["Type with latest(0)"] = "/**\n * **GENERATED CODE DO NOT EDIT!**\n */\n/*\n * Test\n * Test\n * Change Log:\n * 1. Creating a new type\n * 2. Adding a field\n * 3. Adding another field\n * 4. Adding yet another field\n */\n\n/**\n * @param test_field A field that helps testing\n *\n * @sealed\n *\n */\nexport class Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string | null;\n\n  constructor(version: number, hash: string, test_field: string | null) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field;\n  }\n}\n\nexport type Test_V0 = Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d;\n\n/**\n * @param test_field A field that helps testing\n * @param test_field2 A field that helps testing, again\n *\n * @sealed\n *\n */\nexport class Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0 {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string | null;\n\n  readonly test_field2: string;\n\n  constructor(\n    version: number,\n    hash: string,\n    test_field: string | null,\n    test_field2: string\n  ) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field;\n\n    this.test_field2 = test_field2 || \"blah\";\n  }\n}\n\nexport type Test_V1 = Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0;\n\nexport class Test {\n  static deserialize(message: any): Test_V0 | Test_V1 {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    switch (message.version) {\n      case \"Test_V0\":\n      case \"Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\":\n        return new Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d(\n          0,\n          \"56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\",\n          message.test_field\n        );\n\n      case \"Test_V1\":\n      case \"Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0\":\n        return new Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0(\n          1,\n          \"4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0\",\n          message.test_field,\n          message.test_field2\n        );\n\n      default:\n        throw new Error(\n          `Unknown version error or version not present: ${message}`\n        );\n    }\n  }\n\n  static serialize(message: Test_V0 | Test_V1): string {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    return JSON.stringify(message);\n  }\n}\n";

exports["Type with GroupAction(0)"] = "/**\n * **GENERATED CODE DO NOT EDIT!**\n */\n/*\n * Test\n * Test\n * Change Log:\n * 1. Creating a new type\n * 2. Adding a field\n * 3. Adding another field\n * 4. Adding yet another field\n */\n\n/**\n * @param test_field A field that helps testing\n *\n * @sealed\n *\n */\nexport class Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string | null;\n\n  constructor(version: number, hash: string, test_field: string | null) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field;\n  }\n}\n\nexport type Test_V0 = Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d;\n\n/**\n * @param test_field A field that helps testing\n * @param test_field2 A field that helps testing, again\n * @param test_field3 Yet another field for testing\n *\n * @sealed\n *\n */\nexport class Test_Hbb0785e92709010380229df8b379c9f411db9447547b8f285c4647ec91667e7d {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string | null;\n\n  readonly test_field2: string;\n\n  readonly test_field3: number;\n\n  constructor(\n    version: number,\n    hash: string,\n    test_field: string | null,\n    test_field2: string,\n    test_field3: number\n  ) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field;\n\n    this.test_field2 = test_field2 || \"blah\";\n\n    this.test_field3 = test_field3;\n  }\n}\n\nexport type Test_V1 = Test_Hbb0785e92709010380229df8b379c9f411db9447547b8f285c4647ec91667e7d;\n\nexport class Test {\n  static deserialize(message: any): Test_V0 | Test_V1 {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    switch (message.version) {\n      case \"Test_V0\":\n      case \"Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\":\n        return new Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d(\n          0,\n          \"56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\",\n          message.test_field\n        );\n\n      case \"Test_V1\":\n      case \"Test_Hbb0785e92709010380229df8b379c9f411db9447547b8f285c4647ec91667e7d\":\n        return new Test_Hbb0785e92709010380229df8b379c9f411db9447547b8f285c4647ec91667e7d(\n          1,\n          \"bb0785e92709010380229df8b379c9f411db9447547b8f285c4647ec91667e7d\",\n          message.test_field,\n          message.test_field2,\n          message.test_field3\n        );\n\n      default:\n        throw new Error(\n          `Unknown version error or version not present: ${message}`\n        );\n    }\n  }\n\n  static serialize(message: Test_V0 | Test_V1): string {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    return JSON.stringify(message);\n  }\n}\n";

exports["Type with deprecated and dont generate(0)"] = "/**\n * **GENERATED CODE DO NOT EDIT!**\n */\n/*\n * Test\n * Test\n * Change Log:\n * 1. Creating a new type\n * 2. Adding a field\n * 3. Adding another field\n * 4. Adding yet another field\n */\n\n/**\n * @param test_field A field that helps testing\n *\n * @sealed\n *\n */\nexport class Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string | null;\n\n  constructor(version: number, hash: string, test_field: string | null) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field;\n  }\n}\n\nexport type Test_V0 = Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d;\n\n/**\n * @param test_field A field that helps testing\n * @param test_field2 A field that helps testing, again\n *\n * @sealed\n *\n */\nexport class Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0 {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string | null;\n\n  readonly test_field2: string;\n\n  constructor(\n    version: number,\n    hash: string,\n    test_field: string | null,\n    test_field2: string\n  ) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field;\n\n    this.test_field2 = test_field2 || \"blah\";\n  }\n}\n\nexport type Test_V1 = Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0;\n\n/**\n * @param test_field A field that helps testing\n * @param test_field2 A field that helps testing, again\n * @param test_field3 Yet another field for testing\n *\n * @sealed\n *\n */\nexport class Test_Habb52b859471c90b51d0b3103f4ce61cd35664c4e579b49597721df71fd6c655 {\n  readonly version: number;\n  readonly hash: string;\n\n  readonly test_field: string | null;\n\n  readonly test_field2: string;\n\n  readonly test_field3: number;\n\n  constructor(\n    version: number,\n    hash: string,\n    test_field: string | null,\n    test_field2: string,\n    test_field3: number\n  ) {\n    this.version = version;\n    this.hash = hash;\n\n    this.test_field = test_field;\n\n    this.test_field2 = test_field2 || \"blah\";\n\n    this.test_field3 = test_field3;\n  }\n}\n\nexport type Test_V2 = Test_Habb52b859471c90b51d0b3103f4ce61cd35664c4e579b49597721df71fd6c655;\n\nexport class Test {\n  static deserialize(message: any): Test_V0 | Test_V1 | Test_V2 {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    switch (message.version) {\n      case \"Test_V0\":\n      case \"Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\":\n        return new Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d(\n          0,\n          \"56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\",\n          message.test_field\n        );\n\n      case \"Test_V1\":\n      case \"Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0\":\n        return new Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0(\n          1,\n          \"4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0\",\n          message.test_field,\n          message.test_field2\n        );\n\n      case \"Test_V2\":\n      case \"Test_Habb52b859471c90b51d0b3103f4ce61cd35664c4e579b49597721df71fd6c655\":\n        return new Test_Habb52b859471c90b51d0b3103f4ce61cd35664c4e579b49597721df71fd6c655(\n          2,\n          \"abb52b859471c90b51d0b3103f4ce61cd35664c4e579b49597721df71fd6c655\",\n          message.test_field,\n          message.test_field2,\n          message.test_field3\n        );\n\n      default:\n        throw new Error(\n          `Unknown version error or version not present: ${message}`\n        );\n    }\n  }\n\n  static serialize(message: Test_V0 | Test_V1 | Test_V2): string {\n    if (message.version === null || message.version === undefined) {\n      throw new Error(`version not present: ${message}`);\n    }\n    return JSON.stringify(message);\n  }\n}\n";

