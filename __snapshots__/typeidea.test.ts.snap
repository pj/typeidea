// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Add a field 1`] = `
"/**
 * **GENERATED CODE DO NOT EDIT!**
 */
/*
 * Test
 * Test
 * Change Log:
 * 1. Creating a new type
 * 2. Adding a field
 */

/**
 * @param test_field A field that helps testing
 *
 * @sealed
 *
 */
export class Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string | null;

  constructor(version: number, hash: string, test_field: string | null) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field;
  }
}

export type Test_V0 = Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d;

export class Test {
  static deserialize(message: any): Test_V0 {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    switch (message.version) {
      case \\"Test_V0\\":
      case \\"Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\\":
        return new Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d(
          0,
          \\"56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\\",
          message.test_field
        );

      default:
        throw new Error(
          \`Unknown version error or version not present: \${message}\`
        );
    }
  }

  static serialize(message: Test_V0): string {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    return JSON.stringify(message);
  }
}
"
`;

exports[`Add a field with a default value 1`] = `
"/**
 * **GENERATED CODE DO NOT EDIT!**
 */
/*
 * Test
 * Test
 * Change Log:
 * 1. Creating a new type
 * 2. Adding a field
 */

/**
 * @param test_field A field that helps testing
 *
 * @sealed
 *
 */
export class Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string | null;

  constructor(version: number, hash: string, test_field: string | null) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field || \\"A value\\";
  }
}

export type Test_V0 = Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c;

export class Test {
  static deserialize(message: any): Test_V0 {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    switch (message.version) {
      case \\"Test_V0\\":
      case \\"Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c\\":
        return new Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c(
          0,
          \\"036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c\\",
          message.test_field
        );

      default:
        throw new Error(
          \`Unknown version error or version not present: \${message}\`
        );
    }
  }

  static serialize(message: Test_V0): string {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    return JSON.stringify(message);
  }
}
"
`;

exports[`Delete a field 1`] = `
"/**
 * **GENERATED CODE DO NOT EDIT!**
 */
/*
 * Test
 * Test
 * Change Log:
 * 1. Creating a new type
 * 2. Adding a field
 * 3. Adding another field
 * 4. didn&#39;t actually need that
 */

/**
 * @param test_field A field that helps testing
 *
 * @sealed
 *
 */
export class Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string | null;

  constructor(version: number, hash: string, test_field: string | null) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field;
  }
}

export type Test_V0 = Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d;

/**
 * @param test_field A field that helps testing
 * @param test_field2 A field that helps testing, again
 *
 * @sealed
 *
 */
export class Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0 {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string | null;

  readonly test_field2: string;

  constructor(
    version: number,
    hash: string,
    test_field: string | null,
    test_field2: string
  ) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field;

    this.test_field2 = test_field2 || \\"blah\\";
  }
}

export type Test_V1 = Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0;

/**
 * @param test_field A field that helps testing
 *
 * @sealed
 *
 */
export class Test_Hd6cc2965f8ee5ebb6de4a255956c869a8c212bcc4d0bccf1dff40a440c2343f7 {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string | null;

  constructor(version: number, hash: string, test_field: string | null) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field;
  }
}

export type Test_V2 = Test_Hd6cc2965f8ee5ebb6de4a255956c869a8c212bcc4d0bccf1dff40a440c2343f7;

export class Test {
  static deserialize(message: any): Test_V0 | Test_V1 | Test_V2 {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    switch (message.version) {
      case \\"Test_V0\\":
      case \\"Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\\":
        return new Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d(
          0,
          \\"56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\\",
          message.test_field
        );

      case \\"Test_V1\\":
      case \\"Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0\\":
        return new Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0(
          1,
          \\"4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0\\",
          message.test_field,
          message.test_field2
        );

      case \\"Test_V2\\":
      case \\"Test_Hd6cc2965f8ee5ebb6de4a255956c869a8c212bcc4d0bccf1dff40a440c2343f7\\":
        return new Test_Hd6cc2965f8ee5ebb6de4a255956c869a8c212bcc4d0bccf1dff40a440c2343f7(
          2,
          \\"d6cc2965f8ee5ebb6de4a255956c869a8c212bcc4d0bccf1dff40a440c2343f7\\",
          message.test_field
        );

      default:
        throw new Error(
          \`Unknown version error or version not present: \${message}\`
        );
    }
  }

  static serialize(message: Test_V0 | Test_V1 | Test_V2): string {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    return JSON.stringify(message);
  }
}
"
`;

exports[`Make a field optional 1`] = `
"/**
 * **GENERATED CODE DO NOT EDIT!**
 */
/*
 * Test
 * Test
 * Change Log:
 * 1. Creating a new type
 * 2. Adding a field
 * 3. Oops needed to make it optional
 */

/**
 * @param test_field A field that helps testing
 *
 * @sealed
 *
 */
export class Test_H3b9ac56de579e9a69937f2d1d2c27a4cfbedfd0710682f8ab629b18aac4efe14 {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string;

  constructor(version: number, hash: string, test_field: string) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field;
  }
}

export type Test_V0 = Test_H3b9ac56de579e9a69937f2d1d2c27a4cfbedfd0710682f8ab629b18aac4efe14;

/**
 * @param test_field A field that helps testing
 *
 * @sealed
 *
 */
export class Test_H818de92c4372ef16f0eba77a342f97cd788f18b24d52b54a2870236d82184a0b {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string | null;

  constructor(version: number, hash: string, test_field: string | null) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field;
  }
}

export type Test_V1 = Test_H818de92c4372ef16f0eba77a342f97cd788f18b24d52b54a2870236d82184a0b;

export class Test {
  static deserialize(message: any): Test_V0 | Test_V1 {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    switch (message.version) {
      case \\"Test_V0\\":
      case \\"Test_H3b9ac56de579e9a69937f2d1d2c27a4cfbedfd0710682f8ab629b18aac4efe14\\":
        return new Test_H3b9ac56de579e9a69937f2d1d2c27a4cfbedfd0710682f8ab629b18aac4efe14(
          0,
          \\"3b9ac56de579e9a69937f2d1d2c27a4cfbedfd0710682f8ab629b18aac4efe14\\",
          message.test_field
        );

      case \\"Test_V1\\":
      case \\"Test_H818de92c4372ef16f0eba77a342f97cd788f18b24d52b54a2870236d82184a0b\\":
        return new Test_H818de92c4372ef16f0eba77a342f97cd788f18b24d52b54a2870236d82184a0b(
          1,
          \\"818de92c4372ef16f0eba77a342f97cd788f18b24d52b54a2870236d82184a0b\\",
          message.test_field
        );

      default:
        throw new Error(
          \`Unknown version error or version not present: \${message}\`
        );
    }
  }

  static serialize(message: Test_V0 | Test_V1): string {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    return JSON.stringify(message);
  }
}
"
`;

exports[`Multiple types with type reference 1`] = `
"/**
 * **GENERATED CODE DO NOT EDIT!**
 */
/*
 * Test
 * A useful type
 * Change Log:
 * 1. Creating a new type
 * 2. Adding a field
 */
/*
 * Test2
 * a useful type
 * Change Log:
 * 1. Creating a new type
 * 2. asdf
 */

// import * as Test from './Test';

/**
 * @param test_field A field that helps testing
 *
 * @sealed
 *
 */
export class Test_Hc68b1dfae49d22c7332dcfcb86145926907e4171e3a7bb1f3861e9e3b0c2bdfb {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string | null;

  constructor(version: number, hash: string, test_field: string | null) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field;
  }
}

export type Test_V0 = Test_Hc68b1dfae49d22c7332dcfcb86145926907e4171e3a7bb1f3861e9e3b0c2bdfb;

export class Test {
  static deserialize(message: any): Test_V0 {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    switch (message.version) {
      case \\"Test_V0\\":
      case \\"Test_Hc68b1dfae49d22c7332dcfcb86145926907e4171e3a7bb1f3861e9e3b0c2bdfb\\":
        return new Test_Hc68b1dfae49d22c7332dcfcb86145926907e4171e3a7bb1f3861e9e3b0c2bdfb(
          0,
          \\"c68b1dfae49d22c7332dcfcb86145926907e4171e3a7bb1f3861e9e3b0c2bdfb\\",
          message.test_field
        );

      default:
        throw new Error(
          \`Unknown version error or version not present: \${message}\`
        );
    }
  }

  static serialize(message: Test_V0): string {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    return JSON.stringify(message);
  }
}

/**
 * @param test_field2 A reference
 *
 * @sealed
 *
 */
export class Test2_He396d1be414c1504f56969feff04b4bcdf1c52ca1cb653c75f959a3a24d37c49 {
  readonly version: number;
  readonly hash: string;

  readonly test_field2: Test.h_c68b1dfae49d22c7332dcfcb86145926907e4171e3a7bb1f3861e9e3b0c2bdfb;

  constructor(
    version: number,
    hash: string,
    test_field2: Test.h_c68b1dfae49d22c7332dcfcb86145926907e4171e3a7bb1f3861e9e3b0c2bdfb
  ) {
    this.version = version;
    this.hash = hash;

    this.test_field2 = test_field2;
  }
}

export type Test2_V0 = Test2_He396d1be414c1504f56969feff04b4bcdf1c52ca1cb653c75f959a3a24d37c49;

export class Test2 {
  static deserialize(message: any): Test2_V0 {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    switch (message.version) {
      case \\"Test2_V0\\":
      case \\"Test2_He396d1be414c1504f56969feff04b4bcdf1c52ca1cb653c75f959a3a24d37c49\\":
        return new Test2_He396d1be414c1504f56969feff04b4bcdf1c52ca1cb653c75f959a3a24d37c49(
          0,
          \\"e396d1be414c1504f56969feff04b4bcdf1c52ca1cb653c75f959a3a24d37c49\\",
          message.test_field2
        );

      default:
        throw new Error(
          \`Unknown version error or version not present: \${message}\`
        );
    }
  }

  static serialize(message: Test2_V0): string {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    return JSON.stringify(message);
  }
}
"
`;

exports[`Rename a field 1`] = `
"/**
 * **GENERATED CODE DO NOT EDIT!**
 */
/*
 * Test
 * Test
 * Change Log:
 * 1. Creating a new type
 * 2. Adding a field
 * 3. Renaming a field
 */

/**
 * @param test_field A field that helps testing
 *
 * @sealed
 *
 */
export class Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string | null;

  constructor(version: number, hash: string, test_field: string | null) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field || \\"A value\\";
  }
}

export type Test_V0 = Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c;

/**
 * @param renamed_field A field that helps testing
 *
 * @sealed
 *
 */
export class Test_He41f7b607671faf485204483dcf344ef15bbd2856a51485d9876e73178fe07bf {
  readonly version: number;
  readonly hash: string;

  readonly renamed_field: string | null;

  constructor(version: number, hash: string, renamed_field: string | null) {
    this.version = version;
    this.hash = hash;

    this.renamed_field = renamed_field || \\"A value\\";
  }
}

export type Test_V1 = Test_He41f7b607671faf485204483dcf344ef15bbd2856a51485d9876e73178fe07bf;

export class Test {
  static deserialize(message: any): Test_V0 | Test_V1 {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    switch (message.version) {
      case \\"Test_V0\\":
      case \\"Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c\\":
        return new Test_H036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c(
          0,
          \\"036cb58d4009b695ef9c0a35e42cfd356c5ca922f3340d79db2364efd0d0da4c\\",
          message.test_field
        );

      case \\"Test_V1\\":
      case \\"Test_He41f7b607671faf485204483dcf344ef15bbd2856a51485d9876e73178fe07bf\\":
        return new Test_He41f7b607671faf485204483dcf344ef15bbd2856a51485d9876e73178fe07bf(
          1,
          \\"e41f7b607671faf485204483dcf344ef15bbd2856a51485d9876e73178fe07bf\\",
          message.renamed_field
        );

      default:
        throw new Error(
          \`Unknown version error or version not present: \${message}\`
        );
    }
  }

  static serialize(message: Test_V0 | Test_V1): string {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    return JSON.stringify(message);
  }
}
"
`;

exports[`Type with GroupAction 1`] = `
"/**
 * **GENERATED CODE DO NOT EDIT!**
 */
/*
 * Test
 * Test
 * Change Log:
 * 1. Creating a new type
 * 2. Adding a field
 * 3. Adding another field
 * 4. Adding yet another field
 */

/**
 * @param test_field A field that helps testing
 *
 * @sealed
 *
 */
export class Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string | null;

  constructor(version: number, hash: string, test_field: string | null) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field;
  }
}

export type Test_V0 = Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d;

/**
 * @param test_field A field that helps testing
 * @param test_field2 A field that helps testing, again
 * @param test_field3 Yet another field for testing
 *
 * @sealed
 *
 */
export class Test_Hbb0785e92709010380229df8b379c9f411db9447547b8f285c4647ec91667e7d {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string | null;

  readonly test_field2: string;

  readonly test_field3: number;

  constructor(
    version: number,
    hash: string,
    test_field: string | null,
    test_field2: string,
    test_field3: number
  ) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field;

    this.test_field2 = test_field2 || \\"blah\\";

    this.test_field3 = test_field3;
  }
}

export type Test_V1 = Test_Hbb0785e92709010380229df8b379c9f411db9447547b8f285c4647ec91667e7d;

export class Test {
  static deserialize(message: any): Test_V0 | Test_V1 {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    switch (message.version) {
      case \\"Test_V0\\":
      case \\"Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\\":
        return new Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d(
          0,
          \\"56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\\",
          message.test_field
        );

      case \\"Test_V1\\":
      case \\"Test_Hbb0785e92709010380229df8b379c9f411db9447547b8f285c4647ec91667e7d\\":
        return new Test_Hbb0785e92709010380229df8b379c9f411db9447547b8f285c4647ec91667e7d(
          1,
          \\"bb0785e92709010380229df8b379c9f411db9447547b8f285c4647ec91667e7d\\",
          message.test_field,
          message.test_field2,
          message.test_field3
        );

      default:
        throw new Error(
          \`Unknown version error or version not present: \${message}\`
        );
    }
  }

  static serialize(message: Test_V0 | Test_V1): string {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    return JSON.stringify(message);
  }
}
"
`;

exports[`Type with deprecated and dont generate 1`] = `
"/**
 * **GENERATED CODE DO NOT EDIT!**
 */
/*
 * Test
 * Test
 * Change Log:
 * 1. Creating a new type
 * 2. Adding a field
 * 3. Adding another field
 * 4. Adding yet another field
 */

/**
 * @param test_field A field that helps testing
 *
 * @sealed
 *
 */
export class Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string | null;

  constructor(version: number, hash: string, test_field: string | null) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field;
  }
}

export type Test_V0 = Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d;

/**
 * @param test_field A field that helps testing
 * @param test_field2 A field that helps testing, again
 *
 * @sealed
 *
 */
export class Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0 {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string | null;

  readonly test_field2: string;

  constructor(
    version: number,
    hash: string,
    test_field: string | null,
    test_field2: string
  ) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field;

    this.test_field2 = test_field2 || \\"blah\\";
  }
}

export type Test_V1 = Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0;

/**
 * @param test_field A field that helps testing
 * @param test_field2 A field that helps testing, again
 * @param test_field3 Yet another field for testing
 *
 * @sealed
 *
 */
export class Test_Habb52b859471c90b51d0b3103f4ce61cd35664c4e579b49597721df71fd6c655 {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string | null;

  readonly test_field2: string;

  readonly test_field3: number;

  constructor(
    version: number,
    hash: string,
    test_field: string | null,
    test_field2: string,
    test_field3: number
  ) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field;

    this.test_field2 = test_field2 || \\"blah\\";

    this.test_field3 = test_field3;
  }
}

export type Test_V2 = Test_Habb52b859471c90b51d0b3103f4ce61cd35664c4e579b49597721df71fd6c655;

export class Test {
  static deserialize(message: any): Test_V0 | Test_V1 | Test_V2 {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    switch (message.version) {
      case \\"Test_V0\\":
      case \\"Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\\":
        return new Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d(
          0,
          \\"56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\\",
          message.test_field
        );

      case \\"Test_V1\\":
      case \\"Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0\\":
        return new Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0(
          1,
          \\"4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0\\",
          message.test_field,
          message.test_field2
        );

      case \\"Test_V2\\":
      case \\"Test_Habb52b859471c90b51d0b3103f4ce61cd35664c4e579b49597721df71fd6c655\\":
        return new Test_Habb52b859471c90b51d0b3103f4ce61cd35664c4e579b49597721df71fd6c655(
          2,
          \\"abb52b859471c90b51d0b3103f4ce61cd35664c4e579b49597721df71fd6c655\\",
          message.test_field,
          message.test_field2,
          message.test_field3
        );

      default:
        throw new Error(
          \`Unknown version error or version not present: \${message}\`
        );
    }
  }

  static serialize(message: Test_V0 | Test_V1 | Test_V2): string {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    return JSON.stringify(message);
  }
}
"
`;

exports[`Type with latest 1`] = `
"/**
 * **GENERATED CODE DO NOT EDIT!**
 */
/*
 * Test
 * Test
 * Change Log:
 * 1. Creating a new type
 * 2. Adding a field
 * 3. Adding another field
 * 4. Adding yet another field
 */

/**
 * @param test_field A field that helps testing
 *
 * @sealed
 *
 */
export class Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string | null;

  constructor(version: number, hash: string, test_field: string | null) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field;
  }
}

export type Test_V0 = Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d;

/**
 * @param test_field A field that helps testing
 * @param test_field2 A field that helps testing, again
 *
 * @sealed
 *
 */
export class Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0 {
  readonly version: number;
  readonly hash: string;

  readonly test_field: string | null;

  readonly test_field2: string;

  constructor(
    version: number,
    hash: string,
    test_field: string | null,
    test_field2: string
  ) {
    this.version = version;
    this.hash = hash;

    this.test_field = test_field;

    this.test_field2 = test_field2 || \\"blah\\";
  }
}

export type Test_V1 = Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0;

export class Test {
  static deserialize(message: any): Test_V0 | Test_V1 {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    switch (message.version) {
      case \\"Test_V0\\":
      case \\"Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\\":
        return new Test_H56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d(
          0,
          \\"56fe5eaa9656364c83c84208b60dd08e81bc05eb37816cc21eb93618af57150d\\",
          message.test_field
        );

      case \\"Test_V1\\":
      case \\"Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0\\":
        return new Test_H4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0(
          1,
          \\"4ce3d4cfba96f0cdcce4bf1d2812eea0c5b1cf529ac93763f6f33d0600a652f0\\",
          message.test_field,
          message.test_field2
        );

      default:
        throw new Error(
          \`Unknown version error or version not present: \${message}\`
        );
    }
  }

  static serialize(message: Test_V0 | Test_V1): string {
    if (message.version === null || message.version === undefined) {
      throw new Error(\`version not present: \${message}\`);
    }
    return JSON.stringify(message);
  }
}
"
`;
