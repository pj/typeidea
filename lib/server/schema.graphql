type StringField {
  value: String
}

type IntField {
  value: Int
}

type FloatField {
  value: Float
}

type BooleanField {
  value: Boolean
}

union FieldData = StringField | IntField | FloatField | BooleanField

enum FieldTypes {
  stringType,
  booleanType,
  numberType
}

interface Action {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
}

type NewServiceAction implements Action {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  serviceName: String,
  description: String
}

type UpdateDescriptionServiceAction implements Action {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  serviceName: String,
  description: String
}

type AddVersionServiceAction implements Action {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  serviceName: String,
  inputType: String,
  outputType: String,
  inputVersion: Int,
  inputHash: String,
  outputVersion: Int,
  outputHash: String
}

type RenameFieldTypeAction implements Action {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  _from: String,
  to: String
}

type RequiredFieldTypeAction implements Action {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String
}

type OptionalFieldTypeAction implements Action {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String
}

type DeleteFieldTypeAction implements Action {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String
}

type SetDefaultFieldTypeAction implements Action {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String,
  _default: FieldData
}

type RemoveDefaultFieldTypeAction implements Action {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String
}

type AddFieldTypeAction implements Action {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String,
  type: String,
  description: String,
  optional: Boolean,
  _default: FieldData
}

type UpdateDescriptionTypeAction implements Action {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String,
  description: String
}

type ReferenceFieldTypeAction implements Action {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String,
  description: String,
  optional: Boolean,
  referenceType: String,
  referenceHash: String,
  referenceVersion: Int
}

type NewTypeAction implements Action {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  description: String
}

type GroupVersion {
  typeName: String,
  version: Int
  unhashed: Boolean
}

type GroupAction implements Action {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  groupedActions: [Action],
  versions: [GroupVersion]
}

union LogAction = NewServiceAction | UpdateDescriptionServiceAction | AddVersionServiceAction | RenameFieldTypeAction | RequiredFieldTypeAction | OptionalFieldTypeAction | DeleteFieldTypeAction | SetDefaultFieldTypeAction | RemoveDefaultFieldTypeAction | AddFieldTypeAction | UpdateDescriptionTypeAction | ReferenceFieldTypeAction | NewTypeAction | GroupAction

type VersionType {
  _type: String,
  version: Int,
  hash: String
}

type ServiceVersion {
  inputs: [VersionType],
  output: VersionType
}

type Service {
  name: String,
  changeLog: [String],
  description: String,
  versions: [ServiceVersion]
}

interface BaseField {
  name: String,
  changeLog: String,
  description: String,
  optional: Boolean
}

type Field implements BaseField {
  name: String,
  changeLog: String,
  description: String,
  optional: Boolean,
  _default: FieldData,
  _type: FieldTypes
}

type ReferenceField implements BaseField {
  name: String,
  changeLog: String,
  description: String,
  optional: Boolean
  referenceType: String,
  referenceHash: String,
  referenceVersion: Int
}

type FieldObject {
  key: String,
  field: BaseField
}

type Version {
  _type: String,
  version: Int,
  hash: String,
  fields: [FieldObject]
}

type Type {
  name: String,
  versions: [Version],
  latest: Version,
  changeLog: [String],
  description: String
}

type ChangeSet {
  id: String!
  baseHash: String!
  log: [LogAction]
}

type NewLog {
  log: [LogAction]
  services: [Service]
  types: [Type]
  changeSets: [ChangeSet]
}

type Query {
  log(changeSetId: String): [LogAction]
  services(changeSetId: String): [Service]
  types(changeSetId: String): [Type]
  changeSets: [ChangeSet]
}

# input LogActionInput {
#   changeLog: String
#   typeName: String
#   description: String
#   serviceName: String
#   fieldName: String
#   newFieldName: String
#   defaultType: String
#   defaultValue: String
#   fieldDescription: String
#   optional: Boolean
#   outputName: String
#   inputName: String
#   inputVersion: String
#   outputVersion: String
#   referenceName: String
#   referenceVersion: String
#   logType: String
# }

input FieldDataInput {
  booleanValue: Boolean
  integerValue: Int
  floatValue: Float
  stringValue: String
}

input NewServiceActionInput {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  serviceName: String,
  description: String
}

input UpdateDescriptionServiceActionInput {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  serviceName: String,
  description: String
}

input AddVersionServiceActionInput {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  serviceName: String,
  inputType: String,
  outputType: String,
  inputVersion: Int,
  inputHash: String,
  outputVersion: Int,
  outputHash: String
}

input RenameFieldTypeActionInput {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  _from: String,
  to: String
}

input RequiredFieldTypeActionInput {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String
}

input OptionalFieldTypeActionInput {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String
}

input DeleteFieldTypeActionInput {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String
}

input SetDefaultFieldTypeActionInput {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String,
  _default: FieldDataInput
}

input RemoveDefaultFieldTypeActionInput {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String
}

input AddFieldTypeActionInput {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String,
  type: String,
  description: String,
  optional: Boolean,
  _default: FieldDataInput
}

input UpdateDescriptionTypeActionInput {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String,
  description: String
}

input ReferenceFieldTypeActionInput {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  name: String,
  description: String,
  optional: Boolean,
  referenceType: String,
  referenceHash: String,
  referenceVersion: Int
}

input NewTypeActionInput {
  changeLog: String,
  hash: String,
  version: Int
  unhashed: Boolean
  typeName: String,
  description: String
}

input LogActionInput {
  newService: NewServiceActionInput
  updateServiceDescription: UpdateDescriptionServiceActionInput
  addVersion: AddVersionServiceActionInput
  renameField: RenameFieldTypeActionInput
  requiredField: RequiredFieldTypeActionInput
  optionalField: OptionalFieldTypeActionInput
  deleteField: DeleteFieldTypeActionInput
  setDefault: SetDefaultFieldTypeActionInput
  removeDefault: RemoveDefaultFieldTypeActionInput
  addField: AddFieldTypeActionInput
  updateTypeDescription: UpdateDescriptionTypeActionInput
  referenceField: ReferenceFieldTypeActionInput
  newType: NewTypeActionInput
}

input ChangeSetInput {
  id: String!
  baseHash: String!
  log: [LogActionInput!]!
}

type Mutation {
  updateChangeSet(
    changeSet: ChangeSetInput!
  ): ChangeSet
  commitChangeSet(changeSetId: String!): NewLog
  deleteChangeSet(changeSetId: String!): [ChangeSet]
}
